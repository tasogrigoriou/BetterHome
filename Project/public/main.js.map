{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/core/components/alert/alert.component.html","webpack:///./src/app/core/components/alert/alert.component.ts","webpack:///./src/app/core/components/header/header.component.html","webpack:///./src/app/core/components/header/header.component.ts","webpack:///./src/app/core/core.module.ts","webpack:///./src/app/core/services/alert.service.ts","webpack:///./src/app/core/services/example.service.ts","webpack:///./src/app/core/services/login.service.ts","webpack:///./src/app/core/services/members.service.ts","webpack:///./src/app/core/services/register.service.ts","webpack:///./src/app/example/example.component.css","webpack:///./src/app/example/example.component.html","webpack:///./src/app/example/example.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/property/property.component.html","webpack:///./src/app/property/property.component.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/register/register.dialog.html","webpack:///./src/app/register/register.dialog.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var map = {\n\t\"./about-us/about-us.module\": [\n\t\t\"./src/app/about-us/about-us.module.ts\",\n\t\t\"about-us-about-us-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\tvar id = ids[0];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {HomeComponent} from \"./home/home.component\";\nimport {PropertyComponent} from \"./property/property.component\";\nimport {RegisterComponent} from \"./register/register.component\";\nimport {LoginComponent} from \"./login/login.component\";\nimport {ExampleComponent} from \"./example/example.component\";\n\nconst routes: Routes = [\n  {\n    path: '',\n    pathMatch: 'full',\n    component: HomeComponent\n  },\n  {\n    path: 'about-us',\n    loadChildren: './about-us/about-us.module#AboutUsModule'\n  },\n  {\n    path: 'property',\n    component: PropertyComponent\n  },\n  {\n    path: 'register',\n    component: RegisterComponent\n  },\n  {\n    path: 'login',\n    component: LoginComponent\n  },\n  {\n    path: 'example',\n    component: ExampleComponent,\n    data: { title: 'Example Fake Data' }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {useHash: true})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"<!-- header -->\\n<app-header></app-header>\\n<!-- routes will be rendered here -->\\n<router-outlet></router-outlet>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component } from '@angular/core';\nimport 'hammerjs';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport {CoreModule} from \"./core/core.module\";\n\nimport {HomeComponent} from \"./home/home.component\";\nimport {PropertyComponent} from \"./property/property.component\";\nimport {RegisterComponent} from \"./register/register.component\";\nimport {RegisterDialog} from \"./register/register.dialog\";\nimport {LoginComponent} from \"./login/login.component\";\nimport { ExampleComponent } from './example/example.component';\nimport {AlertComponent} from \"./core/components/alert/alert.component\";\n\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {HttpClientModule} from \"@angular/common/http\";\n\nimport {\n  MatInputModule,\n  MatPaginatorModule,\n  MatProgressSpinnerModule,\n  MatSortModule,\n  MatTableModule,\n  MatIconModule,\n  MatButtonModule,\n  MatCardModule,\n  MatFormFieldModule,\n  MatToolbarModule\n} from '@angular/material';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {FlexLayoutModule} from \"@angular/flex-layout\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    PropertyComponent,\n    RegisterComponent,\n    RegisterDialog,\n    LoginComponent,\n    ExampleComponent,\n    AlertComponent\n  ],\n  entryComponents: [\n    RegisterDialog\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    CoreModule,\n    BrowserAnimationsModule,\n    NgbModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    MatInputModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatProgressSpinnerModule,\n    MatIconModule,\n    MatButtonModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatToolbarModule,\n    MatDialogModule,\n    FlexLayoutModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<div *ngIf=\\\"message\\\" [ngClass]=\\\"\\n{ 'alert': message, 'alert-success': message.type === 'success', 'alert-danger': message.type === 'error' }\\n\\\">{{message.text}}</div>\\n\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport {AlertService} from \"../../services/alert.service\";\n\n@Component({\n  selector: 'alert',\n  templateUrl: 'alert.component.html'\n})\n\nexport class AlertComponent implements OnInit, OnDestroy {\n  private subscription: Subscription;\n  message: any;\n\n  constructor(private alertService: AlertService) { }\n\n  ngOnInit() {\n    this.subscription = this.alertService.getMessage().subscribe(message => {\n      this.message = message;\n    });\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n}\n","module.exports = \"<nav class=\\\"navbar is-dark\\\">\\n  <!-- menu -->\\n  <div class=\\\"navbar-menu\\\">\\n    <div class=\\\"navbar-start\\\">\\n      <a class=\\\"navbar-item\\\" routerLink=\\\"\\\">Home</a>\\n      <a class=\\\"navbar-item\\\" routerLink=\\\"about-us\\\">About us</a>\\n      <a class=\\\"navbar-item\\\" routerLink=\\\"property\\\">Property</a>\\n      <a class=\\\"navbar-item\\\" routerLink=\\\"register\\\">Register</a>\\n      <a class=\\\"navbar-item\\\" routerLink=\\\"login\\\">Login</a>\\n    </div>\\n  </div>\\n</nav>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styles: []\n})\nexport class HeaderComponent implements OnInit {\n  constructor() {}\n  ngOnInit() {}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n\nimport { MembersService } from './services/members.service';\nimport {HeaderComponent} from \"./components/header/header.component\";\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule\n  ],\n  providers: [\n    MembersService\n  ],\n  declarations: [\n    HeaderComponent\n  ],\n  exports: [\n    HeaderComponent\n  ],\n})\nexport class CoreModule { }\n","import { Injectable } from '@angular/core';\nimport { Router, NavigationStart } from '@angular/router';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertService {\n  private subject = new Subject<any>();\n  private keepAfterNavigationChange = false;\n\n  constructor(private router: Router) {\n    // clear alert message on route change\n    router.events.subscribe(event => {\n      if (event instanceof NavigationStart) {\n        if (this.keepAfterNavigationChange) {\n          // only keep for a single location change\n          this.keepAfterNavigationChange = false;\n        } else {\n          // clear alert\n          this.subject.next();\n        }\n      }\n    });\n  }\n\n  success(message: string, keepAfterNavigationChange = false) {\n    this.keepAfterNavigationChange = keepAfterNavigationChange;\n    this.subject.next({ type: 'success', text: message });\n  }\n\n  error(message: string, keepAfterNavigationChange = false) {\n    this.keepAfterNavigationChange = keepAfterNavigationChange;\n    this.subject.next({ type: 'error', text: message });\n  }\n\n  getMessage(): Observable<any> {\n    return this.subject.asObservable();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, of, throwError } from 'rxjs';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { catchError, tap, map } from 'rxjs/operators';\n\nconst httpOptions = {\n  headers: new HttpHeaders({'Content-Type': 'application/json'})\n};\nconst apiUrl = '/api/example';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ExampleService {\n\n  constructor(private http: HttpClient) { }\n\n  /** CRUD functions (create, retrieve, update, delete) **/\n\n  getExamples(): Observable<Example[]> {\n    console.log(apiUrl);\n    return this.http.get<Example[]>(apiUrl, httpOptions).pipe(\n        catchError(this.handleError)\n      );\n  }\n\n  postExample(data): Observable<any> {\n    return this.http.post(apiUrl, data, httpOptions).pipe(\n        catchError(this.handleError)\n      );\n  }\n\n  updateExample(id: string, data): Observable<any> {\n    const url = `${apiUrl}/${id}`;\n    return this.http.put(url, data, httpOptions).pipe(\n        catchError(this.handleError)\n      );\n  }\n\n  deleteExample(id: string): Observable<{}> {\n    const url = `${apiUrl}/${id}`;\n    return this.http.delete(url, httpOptions).pipe(\n        catchError(this.handleError)\n      );\n  }\n\n  private handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      console.error(\n        `Backend returned code ${error.status}, ` +\n        `body was: ${error.error}`\n      );\n    }\n    // return an observable with a user-facing error message\n    return throwError('Something bad happened; please try again later.');\n  }\n}\n\nexport interface Example {\n  id: string;\n  name: string;\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, of, throwError } from 'rxjs';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { catchError, tap, map } from 'rxjs/operators';\n\nconst httpOptions = {\n  headers: new HttpHeaders({'Content-Type': 'application/json'})\n};\nconst apiUrl = '/api/login';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  constructor(private http: HttpClient) { }\n\n  /*** Login User ***/\n  loginUser(userData): Observable<any> {\n    return this.http.post(apiUrl, userData, httpOptions).pipe(\n      catchError(this.handleError)\n    );\n  }\n\n  private handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      console.error(\n        `Backend returned code ${error.status}, ` +\n        `body was: ${error.error}`\n      );\n    }\n    // return an observable with a user-facing error message\n    return throwError('Something bad happened; please try again later.');\n  }\n}\n\nexport class LoginUser {\n  userId: number;\n  username: string;\n  firstName: string;\n  lastName: string;\n  emailAddress: string;\n  phoneNumber: string;\n  // favoriteListings: Listing[];\n}\n\nexport class Listing {\n  listingId: number;\n  title: string;\n  listingType: string;\n  price: number;\n  city: string;\n  zipCode: string;\n  street: string;\n  forSale: boolean;\n  numBedrooms: number;\n  numBathrooms: number;\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class MembersService {\n\n  constructor() {}\n\n  getMembers() {\n    return [\n      this.tasoMember,\n      this.henokMember,\n      this.liwangMember,\n      this.austinMember,\n      this.sawyerMember,\n      this.coleMember\n    ];\n\n  }\n  private austinMember = new Member(\n    'Austin Sy-Velasco',\n    'https://scontent-sjc3-1.xx.fbcdn.net/v/t1.0-9/52809925_2350788244932949_4342396319202017280_n.jpg?_nc_cat=102&_nc_ht=scontent-sjc3-1.xx&oh=b0820dab31204a2faf17549ada264f1e&oe=5D228764',\n    'Austin is a back end developer for BetterHome. He will be graduating from SFSU in Spring 2019.'\n  );\n\n  private tasoMember = new Member(\n    'Taso Grigoriou',\n    'https://bit.ly/2NnQCof',\n    'Taso is the team lead for BetterHome. He currently works at Ancestry as an iOS engineer, and will be graduating from SFSU in Spring 2019.'\n  );\n  private coleMember = new Member(\n    'Michael Cole Tormey',\n    'https://bit.ly/2TfL8Ba',\n    'Cole is a front end engineer for BetterHome.'\n  );\n  private henokMember = new Member(\n    'Henok Kassegn',\n    'null',\n    'Henok is a front-end team lead for BetterHome.'\n\n  );\n\n  private liwangMember = new Member(\n    'Liwang Gao',\n    'https://bit.ly/2Nt9ZfN' ,\n    'I am the member of front-end team, and will graduate at 2019.'\n\n  );\n\n  private sawyerMember = new Member(\n    'Sawyer Nixon',\n    'https://bit.ly/2XkcA04',\n    'Sawyer is the backend lead for BetterHome. He is currently attending SFSU, and will be graduating in Fall 2019.'\n  );\n\n}\n\nexport class Member {\n  public name: string;\n  public photoUrl: string;\n  public body: string;\n\n  constructor(name: string, photoUrl: string, body: string) {\n    this.name = name;\n    this.photoUrl = photoUrl;\n    this.body = body;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, of, throwError } from 'rxjs';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { catchError, tap, map } from 'rxjs/operators';\n\nconst httpOptions = {\n  headers: new HttpHeaders({'Content-Type': 'application/json'})\n};\nconst apiUrl = '/api/register';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RegisterService {\n\n  constructor(private http: HttpClient) { }\n\n  /** CRUD function for create **/\n  registerUser(user: RegisterUser): Observable<any> {\n    return this.http.post(apiUrl, user, httpOptions).pipe(\n      catchError(this.handleError)\n    );\n  }\n\n  private handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      console.error(\n        `Backend returned code ${error.status}, ` +\n        `body was: ${error.error}`\n      );\n    }\n    // return an observable with a user-facing error message\n    return throwError('Something bad happened; please try again later.');\n  }\n}\n\nexport class RegisterUser {\n  username: string;\n  password: string;\n  firstName: string;\n  lastName: string;\n  emailAddress: string;\n  phoneNumber: string;\n}\n","module.exports = \".example-container {\\n  display: flex;\\n  flex-direction: column;\\n  max-height: 500px;\\n  min-width: 300px;\\n  overflow: auto;\\n}\\n\\n.isbn-col {\\n  flex: 0 0 100px !important;\\n  white-space: unset !important;\\n}\\n\\n.button-row {\\n  margin: 10px 0;\\n}\\n\\n.mat-icon{\\n  color: red;\\n}\\n\\n\\n\\n\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZXhhbXBsZS9leGFtcGxlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFhO0VBQ2Isc0JBQXNCO0VBQ3RCLGlCQUFpQjtFQUNqQixnQkFBZ0I7RUFDaEIsY0FBYztBQUNoQjs7QUFFQTtFQUNFLDBCQUEwQjtFQUMxQiw2QkFBNkI7QUFDL0I7O0FBRUE7RUFDRSxjQUFjO0FBQ2hCOztBQUNBO0VBQ0UsVUFBVTtBQUNaIiwiZmlsZSI6InNyYy9hcHAvZXhhbXBsZS9leGFtcGxlLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZXhhbXBsZS1jb250YWluZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBtYXgtaGVpZ2h0OiA1MDBweDtcbiAgbWluLXdpZHRoOiAzMDBweDtcbiAgb3ZlcmZsb3c6IGF1dG87XG59XG5cbi5pc2JuLWNvbCB7XG4gIGZsZXg6IDAgMCAxMDBweCAhaW1wb3J0YW50O1xuICB3aGl0ZS1zcGFjZTogdW5zZXQgIWltcG9ydGFudDtcbn1cblxuLmJ1dHRvbi1yb3cge1xuICBtYXJnaW46IDEwcHggMDtcbn1cbi5tYXQtaWNvbntcbiAgY29sb3I6IHJlZDtcbn1cblxuXG5cblxuIl19 */\"","module.exports = \"<div class=\\\"button-row\\\">\\n  <a mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/example-create']\\\"><mat-icon>add</mat-icon></a>\\n</div>\\n\\n<div class=\\\"example-container mat-elevation-z8\\\">\\n  <table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">\\n\\n    <!--- Note that these columns can be defined in any order.\\n          The actual rendered columns are set as a property on the row definition\\\" -->\\n\\n    <!-- ID Column -->\\n    <ng-container matColumnDef=\\\"ID\\\">\\n      <th mat-header-cell *matHeaderCellDef> ID </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"isbn-col\\\"> {{element.id}} </td>\\n    </ng-container>\\n\\n    <!-- Name Column -->\\n    <ng-container matColumnDef=\\\"Name\\\">\\n      <th mat-header-cell *matHeaderCellDef> Name </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.name}} </td>\\n    </ng-container>\\n\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n  </table>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {Example, ExampleService} from '../core/services/example.service';\nimport {DataSource} from \"@angular/cdk/collections\";\n\n@Component({\n  selector: 'app-example',\n  templateUrl: './example.component.html',\n  styleUrls: ['./example.component.css']\n})\nexport class ExampleComponent implements OnInit {\n\n  examples: Example[] = [];\n  dataSource = new ExampleDataSource(this.exampleService);\n\n  displayedColumns: string[] = ['ID', 'Name'];\n\n  constructor(private exampleService: ExampleService) {}\n\n  ngOnInit() {\n    this.getExamples();\n  }\n\n  getExamples() {\n    this.exampleService.getExamples()\n      .subscribe(response => {\n        console.log(response);\n        this.examples = response;\n      }, err => {\n        console.log(err);\n      });\n  }\n}\n\nexport class ExampleDataSource extends DataSource<any> {\n  constructor(private exampleService: ExampleService) {\n    super();\n  }\n\n  connect() {\n    return this.exampleService.getExamples();\n  }\n\n  disconnect() {\n\n  }\n}\n","module.exports = \".home_search\\n{\\n  width: 100%;\\n  z-index: 100;\\n  background: #FFFFFF;\\n}\\n.home_search_container\\n{\\n  position: absolute;\\n  top: -112px;\\n  left: 15px;\\n  width: calc(100% - 30px);\\n  height: 90px;\\n  border-radius: 45px;\\n  padding: 10px;\\n  background: rgba(255,255,255,0.33);\\n}\\n.home_search_content\\n{\\n  width: 100%;\\n  height: 100%;\\n  background: #FFFFFF;\\n  border-radius: 35px;\\n}\\n.search_form\\n{\\n  position: relative;\\n  height: 100%;\\n}\\n.search_form_content\\n{\\n  width: 100%;\\n  height: 100%;\\n  padding-left: 14px;\\n  padding-right: 11px;\\n}\\n.search_form_content > div\\n{\\n  width: 20%;\\n  height: 100%;\\n  padding-left: 18px;\\n  padding-right: 2px;\\n}\\n.search_form_content > div:not(:last-child)\\n{\\n  border-right: solid 2px #d1d1d1;\\n}\\n.search_form_select\\n{\\n  display: block;\\n  position: relative;\\n  top: 50%;\\n  -webkit-transform: translateY(-50%);\\n  transform: translateY(-50%);\\n  width: 100%;\\n  -webkit-appearance: none;\\n  -moz-appearance: none;\\n  -webkit-box-shadow: 0px 0px 0px rgba(0, 0, 0, 0);\\n  -webkit-user-select: none;\\n  background-position: center right;\\n  background-repeat: no-repeat;\\n  border: none;\\n  outline: none;\\n  font-size: 13px;\\n  font-weight: 400;\\n  color: #6b6b6b;\\n  cursor: pointer;\\n}\\n.search_form_button\\n{\\n  width: 193px;\\n  height: 100%;\\n  border-radius: 35px;\\n  border: none;\\n  outline: none;\\n  cursor: pointer;\\n  font-size: 14px;\\n  font-weight: 700;\\n  color: #FFFFFF;\\n  text-transform: uppercase;\\n  background: linear-gradient(to right, #487fee, #32fa95);\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaG9tZS9ob21lLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0VBRUUsV0FBVztFQUNYLFlBQVk7RUFDWixtQkFBbUI7QUFDckI7QUFDQTs7RUFFRSxrQkFBa0I7RUFDbEIsV0FBVztFQUNYLFVBQVU7RUFDVix3QkFBd0I7RUFDeEIsWUFBWTtFQUNaLG1CQUFtQjtFQUNuQixhQUFhO0VBQ2Isa0NBQWtDO0FBQ3BDO0FBQ0E7O0VBRUUsV0FBVztFQUNYLFlBQVk7RUFDWixtQkFBbUI7RUFDbkIsbUJBQW1CO0FBQ3JCO0FBQ0E7O0VBRUUsa0JBQWtCO0VBQ2xCLFlBQVk7QUFDZDtBQUNBOztFQUVFLFdBQVc7RUFDWCxZQUFZO0VBQ1osa0JBQWtCO0VBQ2xCLG1CQUFtQjtBQUNyQjtBQUNBOztFQUVFLFVBQVU7RUFDVixZQUFZO0VBQ1osa0JBQWtCO0VBQ2xCLGtCQUFrQjtBQUNwQjtBQUNBOztFQUVFLCtCQUErQjtBQUNqQztBQUNBOztFQUVFLGNBQWM7RUFDZCxrQkFBa0I7RUFDbEIsUUFBUTtFQUNSLG1DQUFtQztFQUluQywyQkFBMkI7RUFDM0IsV0FBVztFQUNYLHdCQUF3QjtFQUN4QixxQkFBcUI7RUFDckIsZ0RBQWdEO0VBQ2hELHlCQUF5QjtFQUN6QixpQ0FBaUM7RUFDakMsNEJBQTRCO0VBQzVCLFlBQVk7RUFDWixhQUFhO0VBQ2IsZUFBZTtFQUNmLGdCQUFnQjtFQUNoQixjQUFjO0VBQ2QsZUFBZTtBQUNqQjtBQUNBOztFQUVFLFlBQVk7RUFDWixZQUFZO0VBQ1osbUJBQW1CO0VBQ25CLFlBQVk7RUFDWixhQUFhO0VBQ2IsZUFBZTtFQUNmLGVBQWU7RUFDZixnQkFBZ0I7RUFDaEIsY0FBYztFQUNkLHlCQUF5QjtFQUN6Qix1REFBdUQ7QUFDekQiLCJmaWxlIjoic3JjL2FwcC9ob21lL2hvbWUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5ob21lX3NlYXJjaFxue1xuICB3aWR0aDogMTAwJTtcbiAgei1pbmRleDogMTAwO1xuICBiYWNrZ3JvdW5kOiAjRkZGRkZGO1xufVxuLmhvbWVfc2VhcmNoX2NvbnRhaW5lclxue1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogLTExMnB4O1xuICBsZWZ0OiAxNXB4O1xuICB3aWR0aDogY2FsYygxMDAlIC0gMzBweCk7XG4gIGhlaWdodDogOTBweDtcbiAgYm9yZGVyLXJhZGl1czogNDVweDtcbiAgcGFkZGluZzogMTBweDtcbiAgYmFja2dyb3VuZDogcmdiYSgyNTUsMjU1LDI1NSwwLjMzKTtcbn1cbi5ob21lX3NlYXJjaF9jb250ZW50XG57XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIGJhY2tncm91bmQ6ICNGRkZGRkY7XG4gIGJvcmRlci1yYWRpdXM6IDM1cHg7XG59XG4uc2VhcmNoX2Zvcm1cbntcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBoZWlnaHQ6IDEwMCU7XG59XG4uc2VhcmNoX2Zvcm1fY29udGVudFxue1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBwYWRkaW5nLWxlZnQ6IDE0cHg7XG4gIHBhZGRpbmctcmlnaHQ6IDExcHg7XG59XG4uc2VhcmNoX2Zvcm1fY29udGVudCA+IGRpdlxue1xuICB3aWR0aDogMjAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIHBhZGRpbmctbGVmdDogMThweDtcbiAgcGFkZGluZy1yaWdodDogMnB4O1xufVxuLnNlYXJjaF9mb3JtX2NvbnRlbnQgPiBkaXY6bm90KDpsYXN0LWNoaWxkKVxue1xuICBib3JkZXItcmlnaHQ6IHNvbGlkIDJweCAjZDFkMWQxO1xufVxuLnNlYXJjaF9mb3JtX3NlbGVjdFxue1xuICBkaXNwbGF5OiBibG9jaztcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB0b3A6IDUwJTtcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7XG4gIC1tb3otdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpO1xuICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpO1xuICAtby10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcbiAgd2lkdGg6IDEwMCU7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcbiAgLW1vei1hcHBlYXJhbmNlOiBub25lO1xuICAtd2Via2l0LWJveC1zaGFkb3c6IDBweCAwcHggMHB4IHJnYmEoMCwgMCwgMCwgMCk7XG4gIC13ZWJraXQtdXNlci1zZWxlY3Q6IG5vbmU7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciByaWdodDtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgYm9yZGVyOiBub25lO1xuICBvdXRsaW5lOiBub25lO1xuICBmb250LXNpemU6IDEzcHg7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGNvbG9yOiAjNmI2YjZiO1xuICBjdXJzb3I6IHBvaW50ZXI7XG59XG4uc2VhcmNoX2Zvcm1fYnV0dG9uXG57XG4gIHdpZHRoOiAxOTNweDtcbiAgaGVpZ2h0OiAxMDAlO1xuICBib3JkZXItcmFkaXVzOiAzNXB4O1xuICBib3JkZXI6IG5vbmU7XG4gIG91dGxpbmU6IG5vbmU7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBmb250LXdlaWdodDogNzAwO1xuICBjb2xvcjogI0ZGRkZGRjtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KHRvIHJpZ2h0LCAjNDg3ZmVlLCAjMzJmYTk1KTtcbn1cbiJdfQ== */\"","module.exports = \"<section class=\\\"hero is-info is-fullheight is-bold\\\">\\n  <div class=\\\"hero-body\\\">\\n    <h1 class=\\\"title\\\">Search </h1>\\n    <div class=\\\"container\\\">\\n      <!-- Home Search -->\\n      <div class=\\\"home_search\\\">\\n        <div class=\\\"container\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col\\\">\\n              <div class=\\\"home_search_container\\\">\\n                <div class=\\\"home_search_content\\\">\\n                  <form action=\\\"#\\\" class=\\\"search_form d-flex flex-row align-items-start justfy-content-start\\\">\\n                    <div class=\\\"search_form_content d-flex flex-row align-items-start justfy-content-start flex-wrap\\\">\\n                      <div>\\n                        <select class=\\\"search_form_select\\\">\\n                          <option disabled selected>For rent </option>\\n                          <option>Yes</option>\\n                          <option>No</option>\\n                        </select>\\n                      </div>\\n                      <div>\\n                        <select class=\\\"search_form_select\\\">\\n                          <option disabled selected>All types</option>\\n                          <option>Apartment</option>\\n                          <option>House</option>\\n                          <option>Condo</option>\\n                          <option>TownHouse</option>\\n                        </select>\\n                      </div>\\n                      <div>\\n                        <select class=\\\"search_form_select\\\">\\n                          <option disabled selected>City</option>\\n                          <option>New York</option>\\n                          <option>Paris</option>\\n                          <option>Amsterdam</option>\\n                          <option>Rome</option>\\n                        </select>\\n                      </div>\\n                      <div>\\n                        <select class=\\\"search_form_select\\\">\\n                          <option disabled selected>Bedrooms</option>\\n                          <option>Any</option>\\n                          <option>Studio</option>\\n                          <option>1 Bed</option>\\n                          <option>2 Bed</option>\\n                          <option>3 Bed</option>\\n                          <option>4 Bed</option>\\n                        </select>\\n                      </div>\\n                      <div>\\n                        <select class=\\\"search_form_select\\\">\\n                          <option disabled selected>Bathrooms</option>\\n                          <option>1</option>\\n                          <option>1.5</option>\\n                          <option>2</option>\\n                          <option>2.5</option>\\n                          <option>3</option>\\n                        </select>\\n                      </div>\\n                    </div>\\n                    <button class=\\\"search_form_button ml-auto\\\">search</button>\\n                  </form>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n\\n    </div>\\n  </div>\\n</section>\\n\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  //styles: []\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n","module.exports = \"<mat-toolbar>\\n  <span>Login</span>\\n</mat-toolbar>\\n<mat-card class=\\\"my-card\\\">\\n  <mat-card-content>\\n\\n    <!--FORM FIELDS HERE-->\\n    <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\n      <mat-form-field class=\\\"full-width\\\">\\n        <mat-label>Username</mat-label>\\n        <input matInput placeholder=\\\"Username\\\" [(ngModel)]=\\\"user.username\\\" name=\\\"username\\\" required>\\n      </mat-form-field>\\n      <mat-form-field class=\\\"full-width\\\">\\n        <mat-label>Password</mat-label>\\n        <input matInput type=\\\"password\\\" placeholder=\\\"Password\\\" [(ngModel)]=\\\"user.password\\\" name=\\\"password\\\" required>\\n      </mat-form-field>\\n    </div>\\n\\n  </mat-card-content>\\n  <mat-card-actions>\\n\\n    <!-- LOGIN BUTTON -->\\n    <button mat-raised-button (click)=\\\"onSubmit()\\\" color=\\\"primary\\\">Login</button>\\n\\n    <mat-spinner *ngIf=\\\"!isLoaded\\\"></mat-spinner>\\n\\n  </mat-card-actions>\\n</mat-card>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport {Router} from \"@angular/router\";\nimport {MatDialog} from \"@angular/material\";\nimport {first} from \"rxjs/operators\";\nimport {RegisterDialog} from \"../register/register.dialog\";\nimport {LoginService, LoginUser} from \"../core/services/login.service\";\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styles: []\n})\nexport class LoginComponent implements OnInit {\n  user: Login = {\n    username: \"\",\n    password: \"\"\n  };\n\n  loginUser: LoginUser;\n\n  isLoaded = true;\n\n  constructor(private router: Router,\n              private loginService: LoginService,\n              public dialog: MatDialog) { }\n\n  ngOnInit() {\n  }\n\n  onSubmit() {\n    this.isLoaded = false;\n    this.loginService.loginUser(this.user)\n      .pipe(first())\n      .subscribe(user => {\n          this.loginUser = user;\n          this.isLoaded = true;\n          this.openDialog('Login successful!', true);\n        },\n        err => {\n          this.isLoaded = true;\n          this.openDialog('Unable to login. Username or password are incorrect. Please try again', false);\n        });\n  }\n\n  openDialog(message: string, subscribe: boolean) {\n    const dialogRef = this.dialog.open(RegisterDialog, {\n      width: '250px',\n      data: {\n        message: message\n      }\n    });\n    if (subscribe) {\n      dialogRef.afterClosed().subscribe(result => {\n        this.router.navigate(['/']);\n      });\n    }\n  }\n}\n\nexport interface Login {\n  username: string;\n  password: string;\n}\n","module.exports = \"<!DOCTYPE html>\\n<html lang=\\\"en\\\">\\n<head>\\n    <meta charset=\\\"UTF-8\\\">\\n    <title>Property</title>\\n</head>\\n<body>\\n  <p>Property List</p>\\n   <p>For Sale</p>\\n</body>\\n</html>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-property',\n  templateUrl: './property.component.html',\n  styles: []\n})\nexport class PropertyComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n","module.exports = \"/*.my-card {*/\\n  /*margin: 0 auto;*/\\n  /*width: 800px;*/\\n  /*}*/\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcmVnaXN0ZXIvcmVnaXN0ZXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxhQUFhO0VBQ1gsa0JBQWtCO0VBQ2xCLGdCQUFnQjtFQUNsQixJQUFJIiwiZmlsZSI6InNyYy9hcHAvcmVnaXN0ZXIvcmVnaXN0ZXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qLm15LWNhcmQgeyovXG4gIC8qbWFyZ2luOiAwIGF1dG87Ki9cbiAgLyp3aWR0aDogODAwcHg7Ki9cbi8qfSovXG4iXX0= */\"","module.exports = \"<mat-toolbar>\\n  <span>Registration</span>\\n</mat-toolbar>\\n<mat-card class=\\\"my-card\\\">\\n  <mat-card-content>\\n\\n      <!--FORM FIELDS HERE-->\\n    <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\n      <mat-form-field class=\\\"full-width\\\">\\n        <mat-label>First Name</mat-label>\\n        <input matInput placeholder=\\\"First name\\\" [(ngModel)]=\\\"user.firstName\\\" name=\\\"firstName\\\" required><br>\\n      </mat-form-field>\\n      <mat-form-field class=\\\"full-width\\\">\\n        <mat-label>Last Name</mat-label>\\n        <input matInput placeholder=\\\"Last name\\\" [(ngModel)]=\\\"user.lastName\\\" name=\\\"lastName\\\" required>\\n      </mat-form-field>\\n      <mat-form-field class=\\\"full-width\\\">\\n        <mat-label>Username</mat-label>\\n        <input matInput placeholder=\\\"Username\\\" [(ngModel)]=\\\"user.username\\\" name=\\\"username\\\" required>\\n      </mat-form-field>\\n      <mat-form-field class=\\\"full-width\\\">\\n        <mat-label>Password</mat-label>\\n        <input matInput type=\\\"password\\\" placeholder=\\\"Password\\\" [(ngModel)]=\\\"user.password\\\" name=\\\"password\\\" required>\\n      </mat-form-field>\\n      <mat-form-field class=\\\"full-width\\\">\\n        <mat-label>Email Address</mat-label>\\n        <input matInput placeholder=\\\"Email address\\\" [(ngModel)]=\\\"user.emailAddress\\\" name=\\\"emailAddress\\\" required>\\n      </mat-form-field>\\n      <mat-form-field class=\\\"full-width\\\">\\n        <mat-label>Phone Number</mat-label>\\n        <input matInput placeholder=\\\"Phone number\\\" [(ngModel)]=\\\"user.phoneNumber\\\" name=\\\"phoneNumber\\\" required>\\n      </mat-form-field>\\n    </div>\\n\\n  </mat-card-content>\\n  <mat-card-actions>\\n\\n    <!-- REGISTER BUTTON -->\\n    <button mat-raised-button (click)=\\\"onSubmit()\\\" color=\\\"primary\\\">Register</button>\\n\\n    <mat-spinner *ngIf=\\\"!isLoaded\\\"></mat-spinner>\\n\\n  </mat-card-actions>\\n</mat-card>\\n\"","import {Component, Inject, OnInit} from '@angular/core';\nimport { Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\nimport {RegisterService, RegisterUser} from \"../core/services/register.service\";\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {RegisterDialog} from \"./register.dialog\";\n\n@Component({\n  selector: 'app-property',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  user: RegisterUser;\n\n  isLoaded = true;\n\n  constructor(private router: Router,\n              private registerService: RegisterService,\n              public dialog: MatDialog) { }\n\n  ngOnInit() {\n    this.user = new RegisterUser();\n  }\n\n  onSubmit() {\n    if (this.isDataProvided()) {\n      this.isLoaded = false;\n      this.registerService.registerUser(this.user)\n        .pipe(first())\n        .subscribe(data => {\n            this.isLoaded = true;\n            this.openDialog('Registration successful!', true);\n          },\n          error => {\n            this.isLoaded = true;\n            this.openDialog('Username is already taken. Please choose another username', false);\n          });\n    }\n    else {\n      this.openDialog('Please enter input for all required fields', false);\n    }\n  }\n\n  isDataProvided(): boolean {\n    return (!this.isEmpty(this.user.username) &&\n      !this.isEmpty(this.user.password) &&\n      !this.isEmpty(this.user.firstName) &&\n      !this.isEmpty(this.user.lastName) &&\n      !this.isEmpty(this.user.emailAddress) &&\n      !this.isEmpty(this.user.phoneNumber));\n  }\n\n  isEmpty(str: string): boolean {\n    return (!str || 0 === str.length);\n  }\n\n  openDialog(message: string, subscribe: boolean) {\n    const dialogRef = this.dialog.open(RegisterDialog, {\n      width: '250px',\n      data: {\n        message: message\n      }\n    });\n    if (subscribe) {\n      dialogRef.afterClosed().subscribe(result => {\n        this.router.navigate(['/login']);\n      });\n    }\n  }\n}\n","module.exports = \"<mat-dialog-content>\\n  {{data.message}}\\n</mat-dialog-content>\\n<mat-dialog-actions align=\\\"center\\\">\\n  <button mat-raised-button color=\\\"primary\\\" (click)=\\\"onOkClick()\\\">Ok</button>\\n</mat-dialog-actions>\\n\"","import {Component, Inject} from \"@angular/core\";\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material\";\n\n@Component({\n  selector: 'dialog-component',\n  templateUrl: 'register.dialog.html',\n})\nexport class RegisterDialog {\n  constructor(public dialogRef: MatDialogRef<RegisterDialog>,\n              @Inject(MAT_DIALOG_DATA) public data: any) {}\n\n  onOkClick(): void {\n    this.dialogRef.close();\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}